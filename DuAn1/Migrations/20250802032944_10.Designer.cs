// <auto-generated />
using System;
using DuAn1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DuAn1.Migrations
{
    [DbContext(typeof(Duan1Context))]
    [Migration("20250802032944_10")]
    partial class _10
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DuAn1.Models.ChiTietKhuyenMai", b =>
                {
                    b.Property<string>("MaKhuyenMai")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(0);

                    b.Property<string>("MaSanPham")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaKhuyenMai", "MaSanPham");

                    b.HasIndex("MaSanPham");

                    b.ToTable("ChiTietKhuyenMais");
                });

            modelBuilder.Entity("DuAn1.Models.GioHang", b =>
                {
                    b.Property<string>("MaGioHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaKhachHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("NgayThem")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SoLoaiSanPham")
                        .HasColumnType("int");

                    b.HasKey("MaGioHang");

                    b.HasIndex("MaKhachHang")
                        .IsUnique()
                        .HasFilter("[MaKhachHang] IS NOT NULL");

                    b.ToTable("GioHangs");
                });

            modelBuilder.Entity("DuAn1.Models.Hang", b =>
                {
                    b.Property<string>("MaHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenHang")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TinhNang")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Website")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("MaHang");

                    b.ToTable("Hangs");
                });

            modelBuilder.Entity("DuAn1.Models.HoaDon", b =>
                {
                    b.Property<string>("MaHoaDon")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaGioHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaKhachHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("NgaySuaChua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ThanhTien")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("MaGioHang");

                    b.HasIndex("MaKhachHang");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("DuAn1.Models.HoaDonChiTiet", b =>
                {
                    b.Property<string>("MaHoaDon")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(0);

                    b.Property<string>("MaSanPham")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(1);

                    b.Property<decimal?>("DonGia")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaHoaDon", "MaSanPham");

                    b.HasIndex("MaSanPham");

                    b.ToTable("HoaDonChiTiets");
                });

            modelBuilder.Entity("DuAn1.Models.KhachHang", b =>
                {
                    b.Property<string>("MaKhachHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaKhachHang");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("DuAn1.Models.KhuyenMai", b =>
                {
                    b.Property<string>("MaKhuyenMai")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaQuanLy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PhanTramGiam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("QuanLyMaQuanLy")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenKhuyenMai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKhuyenMai");

                    b.HasIndex("QuanLyMaQuanLy");

                    b.ToTable("KhuyenMais");
                });

            modelBuilder.Entity("DuAn1.Models.MauSac", b =>
                {
                    b.Property<string>("MaMauSac")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenMauSac")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaMauSac");

                    b.ToTable("MauSacs");
                });

            modelBuilder.Entity("DuAn1.Models.QuanLy", b =>
                {
                    b.Property<string>("MaQuanLy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenQuanLy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaQuanLy");

                    b.ToTable("QuanLies");
                });

            modelBuilder.Entity("DuAn1.Models.SanPham", b =>
                {
                    b.Property<string>("MaSanPham")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("DonGia")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("DungLuongPin")
                        .HasColumnType("int");

                    b.Property<string>("HinhMinhHoa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("KhoangCachKetNoi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KichCo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("KieuKetNoi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LanSuaGanNhat")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaKhuyenMai")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaMauSac")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("SoLuongTonKho")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaSanPham");

                    b.HasIndex("MaHang");

                    b.HasIndex("MaKhuyenMai");

                    b.HasIndex("MaMauSac");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("DuAn1.Models.SanPhamGioHang", b =>
                {
                    b.Property<string>("MaGioHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(0);

                    b.Property<string>("MaSanPham")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(1);

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaGioHang", "MaSanPham");

                    b.HasIndex("MaSanPham");

                    b.ToTable("SanPhamGioHangs");
                });

            modelBuilder.Entity("DuAn1.Models.ChiTietKhuyenMai", b =>
                {
                    b.HasOne("DuAn1.Models.KhuyenMai", "MaKhuyenMaiNavigation")
                        .WithMany("ChiTietKhuyenMais")
                        .HasForeignKey("MaKhuyenMai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAn1.Models.SanPham", "MaSanPhamNavigation")
                        .WithMany("ChiTietKhuyenMais")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaKhuyenMaiNavigation");

                    b.Navigation("MaSanPhamNavigation");
                });

            modelBuilder.Entity("DuAn1.Models.GioHang", b =>
                {
                    b.HasOne("DuAn1.Models.KhachHang", "MaKhachHangNavigation")
                        .WithOne("GioHang")
                        .HasForeignKey("DuAn1.Models.GioHang", "MaKhachHang");

                    b.Navigation("MaKhachHangNavigation");
                });

            modelBuilder.Entity("DuAn1.Models.HoaDon", b =>
                {
                    b.HasOne("DuAn1.Models.GioHang", "MaGioHangNavigation")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaGioHang");

                    b.HasOne("DuAn1.Models.KhachHang", "MaKhachHangNavigation")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaKhachHang");

                    b.Navigation("MaGioHangNavigation");

                    b.Navigation("MaKhachHangNavigation");
                });

            modelBuilder.Entity("DuAn1.Models.HoaDonChiTiet", b =>
                {
                    b.HasOne("DuAn1.Models.HoaDon", "MaHoaDonNavigation")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("MaHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAn1.Models.SanPham", "MaSanPhamNavigation")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaHoaDonNavigation");

                    b.Navigation("MaSanPhamNavigation");
                });

            modelBuilder.Entity("DuAn1.Models.KhuyenMai", b =>
                {
                    b.HasOne("DuAn1.Models.QuanLy", "QuanLy")
                        .WithMany("KhuyenMais")
                        .HasForeignKey("QuanLyMaQuanLy");

                    b.Navigation("QuanLy");
                });

            modelBuilder.Entity("DuAn1.Models.SanPham", b =>
                {
                    b.HasOne("DuAn1.Models.Hang", "MaHangNavigation")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaHang");

                    b.HasOne("DuAn1.Models.KhuyenMai", "MaKhuyenMaiNavigation")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaKhuyenMai");

                    b.HasOne("DuAn1.Models.MauSac", "MaMauSacNavigation")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaMauSac");

                    b.Navigation("MaHangNavigation");

                    b.Navigation("MaKhuyenMaiNavigation");

                    b.Navigation("MaMauSacNavigation");
                });

            modelBuilder.Entity("DuAn1.Models.SanPhamGioHang", b =>
                {
                    b.HasOne("DuAn1.Models.GioHang", "MaGioHangNavigation")
                        .WithMany("SanPhamGioHangs")
                        .HasForeignKey("MaGioHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuAn1.Models.SanPham", "MaSanPhamNavigation")
                        .WithMany("SanPhamGioHangs")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaGioHangNavigation");

                    b.Navigation("MaSanPhamNavigation");
                });

            modelBuilder.Entity("DuAn1.Models.GioHang", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("SanPhamGioHangs");
                });

            modelBuilder.Entity("DuAn1.Models.Hang", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("DuAn1.Models.HoaDon", b =>
                {
                    b.Navigation("HoaDonChiTiets");
                });

            modelBuilder.Entity("DuAn1.Models.KhachHang", b =>
                {
                    b.Navigation("GioHang");

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("DuAn1.Models.KhuyenMai", b =>
                {
                    b.Navigation("ChiTietKhuyenMais");

                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("DuAn1.Models.MauSac", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("DuAn1.Models.QuanLy", b =>
                {
                    b.Navigation("KhuyenMais");
                });

            modelBuilder.Entity("DuAn1.Models.SanPham", b =>
                {
                    b.Navigation("ChiTietKhuyenMais");

                    b.Navigation("HoaDonChiTiets");

                    b.Navigation("SanPhamGioHangs");
                });
#pragma warning restore 612, 618
        }
    }
}
